<Window xmlns:xc="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"       
        xmlns:local="clr-namespace:AnimationEditor.Pages"
        xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
        xmlns:render="clr-namespace:SkiaSharp.Views.WPF;assembly=SkiaSharp.Views.WPF"
        x:Class="AnimationEditor.Pages.MainWindow"
        mc:Ignorable="d"
        Title="RSDK Animation Editor v2" MinHeight="540" Height="540" Closing="Window_Closing" Loaded="Window_Loaded" MinWidth="772" Width="772" Background="{DynamicResource NormalBackground2}" WindowStyle="SingleBorderWindow">
    <DockPanel x:Name="MainPanel">
        <Menu DockPanel.Dock="Top" x:Name="MenuStrip" Background="{DynamicResource MenuBar}" Foreground="{DynamicResource NormalText}">
            <MenuItem Header="_File">
                <MenuItem x:Name="MenuFileOpen" Header="_Open" Click="MenuFileOpen_Click"/>
                <Separator/>
                <MenuItem x:Name="MenuFileOpenRecently" Header="_Recently Opened..." SubmenuOpened="MenuFileOpenRecently_SubmenuOpened">
                    <MenuItem Header="No Recent Items" IsEnabled="False" x:Name="NoRecentFiles" Tag="0"/>
                </MenuItem>
                <Separator/>
                <MenuItem x:Name="MenuFileSave" Header="_Save" Click="MenuFileSave_Click"/>
                <MenuItem x:Name="MenuFileSaveAs" Header="Save _as" Click="MenuFileSaveAs_Click"/>
                <Separator/>
                <MenuItem x:Name="MenuFileUnloadAnimation" Header="Unload _Animation" Click="MenuFileUnloadAnimation_Click"/>
                <Separator/>
                <MenuItem x:Name="MenuFileExit" Header="E_xit" Click="MenuFileExit_Click"/>
            </MenuItem>
            <MenuItem Header="_View" Visibility="Visible">
                <MenuItem x:Name="MenuViewTransparentSpriteSheets" IsCheckable="True" Header="Transparent Sprite Sheets" Click="MenuViewTransparentSpriteSheets_Click"/>
                <MenuItem x:Name="MenuViewFullSpriteSheets" IsCheckable="True" Header="View Full Sprite Sheets" Click="MenuViewFullSpriteSheets_Click"/>
                <MenuItem x:Name="MenuViewSetBackgroundToTransparentColor" IsCheckable="True" Click="MenuViewSetBackgroundToTransparentColor_Click">
                    <MenuItem.Header>
                        <StackPanel Background="Transparent">
                            <TextBlock><Run Text="Use Sprite Sheet's"/></TextBlock>
                            <TextBlock><Run Text="Transparent Color as Background"/></TextBlock>
                        </StackPanel>

                    </MenuItem.Header>
                </MenuItem>
                <MenuItem x:Name="MenuViewFrameBorder" IsCheckable="True" Header="View Frame Border" Click="MenuViewFrameBorder_Click"/>
                <Separator/>
                <MenuItem Header="Editor Settings">
                    <MenuItem x:Name="MenuViewUseDarkTheme" IsCheckable="True" Unchecked="MenuViewUseDarkTheme_Unchecked" Checked="MenuViewUseDarkTheme_Checked" Header="Use Dark Theme"/>
                </MenuItem>

            </MenuItem>
            <MenuItem Header="_Info">
                <MenuItem x:Name="MenuInfoAbout" Header="_About" Click="MenuInfoAbout_Click"/>
            </MenuItem>
        </Menu>
        <Grid Margin="5" IsEnabled="{Binding IsAnimationDataLoaded}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="162"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>

            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Margin="40,0" x:Name="PopupHost"/>

            <DockPanel Grid.Column="0">
                <DockPanel Grid.Column="0">
                    <ToolBarPanel DockPanel.Dock="Bottom" Orientation="Horizontal">

                        <Button x:Name="ButtonAnimationAdd" BorderThickness="1" Click="ButtonAnimationAdd_Click">
                            <Button.ToolTip>
                                <StackPanel>
                                    <Label Content="Create an empty animation."/>
                                </StackPanel>
                            </Button.ToolTip>
                            <Image Width="16" Source="{StaticResource Add_16x}"/>
                        </Button>

                        <Button x:Name="ButtonAnimationDuplicate" BorderThickness="1" Click="ButtonAnimationDuplicate_Click">
                            <Button.ToolTip>
                                <StackPanel>
                                    <Label Content="Duplicate the selected animation."/>
                                </StackPanel>
                            </Button.ToolTip>
                            <Image Width="16" Source="{StaticResource Copy_16x}"/>
                        </Button>

                        <Button x:Name="ButtonAnimationRemove" BorderThickness="1" Click="ButtonAnimationRemove_Click">
                            <Button.ToolTip>
                                <StackPanel>
                                    <Label Content="Remove the selected animation."/>
                                </StackPanel>
                            </Button.ToolTip>
                            <Image Width="16" Source="{StaticResource Remove_color_16x}"/>
                        </Button>

                        <Button x:Name="ButtonAnimationImport" BorderThickness="1" Click="ButtonAnimationImport_Context">
                            <Button.ToolTip>
                                <StackPanel>
                                    <Label Content="Import the selected animation from a file."/>
                                </StackPanel>
                            </Button.ToolTip>
                            <Button.ContextMenu>
                                <ContextMenu x:Name="ImportAnimationContext">
                                    <MenuItem IsEnabled="False" Header="Import Animation: "/>
                                    <Separator/>
                                    <MenuItem x:Name="ImportAnimations" Header="Import Animation" IsEnabled="False" Click="ButtonAnimationImport_Click"/>
                                    <MenuItem x:Name="ImportAnimationImages" Header="Import Images to Animation..." IsEnabled="False" Visibility="Collapsed"/>
                                </ContextMenu>
                            </Button.ContextMenu>
                            <Image Width="16" Source="{StaticResource Import_16x}"/>
                        </Button>

                        <Button x:Name="ButtonAnimationExport" BorderThickness="1" Width="20" Height="20" Click="ButtonAnimationExport_Context">
                            <Button.ToolTip>
                                <StackPanel>
                                    <Label Content="Export the selected animation to a file."/>
                                </StackPanel>
                            </Button.ToolTip>
                            <Button.ContextMenu>
                                <ContextMenu x:Name="ExportAnimationContext">
                                    <MenuItem IsEnabled="False" Header="Export Animation: "/>
                                    <Separator/>
                                    <MenuItem x:Name="ExportAnimation" Header="Export Animation" IsEnabled="True" Click="ButtonAnimationExport_Click"/>
                                    <MenuItem x:Name="ExportAnimationImages" Header="Export Animation Frames to PNG..." Click="ExportAnimationImages_Click"/>
                                </ContextMenu>
                            </Button.ContextMenu>
                            <Image Source="{StaticResource Export_16x}" Height="16" Width="14" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="1" CenterX="1" CenterY="1"/>
                                        <SkewTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                        </Button>
                        <Button x:Name="ButtonAnimationUp" BorderThickness="1" Click="ButtonAnimationUp_Click">
                            <Button.ToolTip>
                                <StackPanel>
                                    <Label Content="Shifts the Current Animation Up by one"/>
                                </StackPanel>
                            </Button.ToolTip>
                            <Image Source="{StaticResource Arrow}" Height="16" Width="16" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="-1"/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="-180.0"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                        </Button>
                        <Button x:Name="ButtonAnimationDown" BorderThickness="1" Click="ButtonAnimationDown_Click">
                            <Button.ToolTip>
                                <StackPanel>
                                    <Label Content="Shifts the Current Animation Down by one"/>
                                </StackPanel>
                            </Button.ToolTip>
                            <Image Source="{StaticResource Arrow}" Height="16" Width="16" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="-1"/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="0.0"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                        </Button>
                        <Button x:Name="ButtonAnimationRename" BorderThickness="1" Click="ButtonAnimationRename_Click">
                            <Button.ToolTip>
                                <StackPanel>
                                    <Label Content="Rename the selected animation."/>
                                </StackPanel>
                            </Button.ToolTip>
                            <Image Width="16" Source="{StaticResource EditTitleString_16x}"/>
                        </Button>
                    </ToolBarPanel>
                    <ListBox x:Name="List" Width="160" HorizontalAlignment="Left" ItemsSource="{Binding Animations}" DisplayMemberPath="AnimName"
                         SelectedItem="{Binding SelectedAnimation, Mode=OneWayToSource}"
                          SelectedIndex="{Binding SelectedAnimationIndex, Mode=TwoWay}"
                             SelectionChanged="List_SelectionChanged"/>
                </DockPanel>
            </DockPanel>

            <DockPanel  Grid.Column="2">
                <DockPanel DockPanel.Dock="Bottom">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="9*"/>
                            <ColumnDefinition Width="311*"/>
                        </Grid.ColumnDefinitions>
                        <ListBox x:Name="FramesList" ScrollViewer.HorizontalScrollBarVisibility="Visible" VerticalAlignment="Stretch"
                         SelectedIndex="{Binding SelectedFrameIndex}" SelectionChanged="FramesList_SelectionChanged" MouseDoubleClick="FramesList_MouseDoubleClick" ScrollBar.Scroll="FramesList_Scroll" Grid.ColumnSpan="2">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                        <ListBox Visibility="Hidden" x:Name="FakeScrollbar" IsEnabled="False" ScrollViewer.HorizontalScrollBarVisibility="Visible" VerticalAlignment="Stretch" Grid.ColumnSpan="2"/>
                    </Grid>
                </DockPanel>
                <Grid DockPanel.Dock="Bottom" Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel  DockPanel.Dock="Bottom" Orientation="Horizontal">
                        <ToggleButton  Click="ButtonPlay_Click" Checked="ButtonPlay_CheckChanged" Unchecked="ButtonPlay_CheckChanged" x:Name="ButtonPlay">
                            <ToggleButton.ToolTip>
                                <StackPanel>
                                    <Label Content="Play the current animation"/>
                                </StackPanel>
                            </ToggleButton.ToolTip>
                            <Image Width="16" Source="{StaticResource Run_16x}"/>
                        </ToggleButton>
                        <Button  Content="..." Width="20" Height="20" x:Name="PlaybackOptionsButton" VerticalContentAlignment="Center" Click="PlaybackOptionsButton_Click">
                            <Button.ContextMenu>
                                <ContextMenu x:Name="PlaybackOptionsContextMenu">
                                    <MenuItem IsEnabled="False" IsHitTestVisible="False">
                                        <MenuItem.Header>
                                            <TextBlock Text="Playback Options: " Foreground="{DynamicResource DisabledText}"/>
                                        </MenuItem.Header>
                                    </MenuItem>
                                    <Separator/>
                                    <MenuItem Header="Forced Playback Mode...">
                                        <MenuItem x:Name="ForcePlaybackMenuItem" StaysOpenOnClick="True" Click="ForcePlaybackMenuItem_Click" IsCheckable="True">
                                            <MenuItem.Header>
                                                <StackPanel Background="Transparent">
                                                    <TextBlock Text="Forced Playback Mode " Background="Transparent"/>
                                                    <TextBlock Text="(For Slow/Manual Animations)" Background="Transparent"/>
                                                </StackPanel>
                                            </MenuItem.Header>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem StaysOpenOnClick="True">
                                            <MenuItem.Header>
                                                <StackPanel Background="Transparent">
                                                    <TextBlock Text="Forced Speed" Background="Transparent"/>
                                                    <xc:IntegerUpDown x:Name="ForcedPlaybackSpeedNUD" IsHitTestVisible="True" DefaultValue="128" Value="128" ValueChanged="ForcedPlaybackSpeedNUD_ValueChanged"/>
                                                </StackPanel>
                                            </MenuItem.Header>
                                        </MenuItem>
                                        <MenuItem StaysOpenOnClick="True">
                                            <MenuItem.Header>
                                                <StackPanel Background="Transparent">
                                                    <TextBlock Text="Forced Duration" Background="Transparent"/>
                                                    <xc:IntegerUpDown x:Name="ForcedPlaybackDurationNUD" Value="256" DefaultValue="256" ValueChanged="ForcedPlaybackDurationNUD_ValueChanged"/>
                                                </StackPanel>
                                            </MenuItem.Header>
                                        </MenuItem>
                                    </MenuItem>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                        <Button  x:Name="ButtonRewind" Visibility="Collapsed">
                            <Button.ToolTip>
                                <StackPanel>
                                    <Label Content="Restart the animation from the first frame"/>
                                </StackPanel>
                            </Button.ToolTip>
                            <Image Width="16"/>
                        </Button>
                        <Button  x:Name="ButtonZoomIn" Click="ButtonZoomIn_Click">
                            <Button.ToolTip>
                                <StackPanel>
                                    <Label Content="Zoom in"/>
                                </StackPanel>
                            </Button.ToolTip>
                            <Image Width="16" Source="{StaticResource ZoomIn_16x}"/>
                        </Button>
                        <Button  x:Name="ButtonZoomOut" Click="ButtonZoomOut_Click">
                            <Button.ToolTip>
                                <StackPanel>
                                    <Label Content="Zoom out"/>
                                </StackPanel>
                            </Button.ToolTip>
                            <Image Width="16" Source="{StaticResource ZoomOut_16x}"/>
                        </Button>
                        <ToggleButton  x:Name="ButtonShowCenter" Click="ButtonShowCenter_Click">
                            <ToggleButton.ToolTip>
                                <StackPanel>
                                    <Label Content="Show a guide to center a frame"/>
                                </StackPanel>
                            </ToggleButton.ToolTip>
                            <Image Width="16" Source="{StaticResource TableInsideBorder_16x}"/>
                        </ToggleButton>
                        <ToggleButton  x:Name="ButtonShowFieldHitbox" Visibility="Visible" Click="ButtonShowFieldHitbox_Click">
                            <ToggleButton.ToolTip>
                                <StackPanel>
                                    <Label Content="Show the hitbox used for field collision"/>
                                </StackPanel>
                            </ToggleButton.ToolTip>
                            <Image Width="16" Source="{StaticResource AppearanceTabSolid_16x}"/>
                        </ToggleButton>
                        <ToggleButton  x:Name="ButtonShowEntityHitbox" Visibility="Collapsed">
                            <ToggleButton.ToolTip>
                                <StackPanel>
                                    <Label Content="Show the hitbox used for entity collision"/>
                                </StackPanel>
                            </ToggleButton.ToolTip>
                            <Image Width="16" Source="{StaticResource AppearanceTabSwatch_16x}"/>
                        </ToggleButton>

                        <Separator  Margin="3 0 3 0" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />

                        <Button  x:Name="ButtonFrameAdd" Grid.Column="1" Click="ButtonFrameAdd_Click"
                            IsEnabled="{Binding IsAnimationSelected}">
                            <Button.ToolTip>
                                <Label Content="Create an empty frame"/>
                            </Button.ToolTip>
                            <Image Source="{StaticResource Add_16x}" Width="16"/>
                        </Button>
                        <Button x:Name="ButtonFrameDupe" Grid.Column="1" Click="ButtonFrameDupe_Click"
                            IsEnabled="{Binding IsFrameSelected}">
                            <Button.ToolTip>
                                <Label Content="Duplicate selected frame"/>
                            </Button.ToolTip>
                            <Image Source="{StaticResource Copy_16x}" Width="16"/>
                        </Button>
                        <Button x:Name="ButtonFrameRemove" Grid.Column="1" Click="ButtonFrameRemove_Click"
                            IsEnabled="{Binding IsFrameSelected}">
                            <Button.ToolTip>
                                <Label Content="Delete the selected frame"/>
                            </Button.ToolTip>
                            <Image Source="{StaticResource Remove_color_16x}" Width="16"/>
                        </Button>
                        <Button x:Name="ButtonFrameImport" Grid.Column="1" Click="ButtonFrameImport_Context">
                            <Button.ToolTip>
                                <Label Content="Import an existing frame"/>
                            </Button.ToolTip>
                            <Button.ContextMenu>
                                <ContextMenu x:Name="ImportFrameContext">
                                    <MenuItem IsEnabled="False" Header="Import Frame: "/>
                                    <Separator/>
                                    <MenuItem x:Name="ImportFrames" Header="Import Frame" IsEnabled="True" Click="ButtonFrameImport_Click"/>
                                    <MenuItem x:Name="ImportFramesImages" Header="Import Image to Frame..." IsEnabled="False" Visibility="Collapsed"/>
                                </ContextMenu>
                            </Button.ContextMenu>
                            <Image Source="{StaticResource Import_16x}" Width="16"/>
                        </Button>
                        <Button x:Name="ButtonFrameExport" Grid.Column="1" Height="20" Width="20" Click="ButtonFrameExport_Context"
                            IsEnabled="{Binding IsFrameSelected}">
                            <Button.ToolTip>
                                <Label Content="Export the selected frame"/>
                            </Button.ToolTip>
                            <Button.ContextMenu>
                                <ContextMenu x:Name="ExportFrameContext">
                                    <MenuItem IsEnabled="False" Header="Export Frame: "/>
                                    <Separator/>
                                    <MenuItem x:Name="ExportFrame" Header="Export Frame" IsEnabled="True" Click="ButtonFrameExport_Click"/>
                                    <MenuItem x:Name="ExportFrameImage" Header="Export Frame to PNG..." IsEnabled="False"/>
                                </ContextMenu>
                            </Button.ContextMenu>
                            <Image Source="{StaticResource Export_16x}" Height="16" Width="14" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="1" CenterX="1" CenterY="1"/>
                                        <SkewTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                        </Button>
                        <Button Width="20" Height="20" x:Name="ButtonFrameLeft" Grid.Column="1" Click="ButtonFrameLeft_Click">
                            <Button.ToolTip>
                                <Label Content="Shifts the Current Frame over to the left by one"/>
                            </Button.ToolTip>
                            <Image Source="{StaticResource Arrow}" Height="16" Width="16" RenderTransformOrigin="0.5,0.5">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="-1"/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90.0"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                        </Button>
                        <Button Width="20" Height="20" x:Name="ButtonFrameRight" Grid.Column="1" Click="ButtonFrameRight_Click">
                            <Button.ToolTip>
                                <Label Content="Shifts the Current Frame over to the right by one"/>
                            </Button.ToolTip>
                            <Image Source="{StaticResource Arrow}" Height="16" Width="16">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90.0" CenterX="8" CenterY="8"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                        </Button>
                        <Button Width="20" Height="20" Content="?" x:Name="ButtonHelp" Click="ButtonHelp_Click">
                            <Button.ContextMenu>
                                <ContextMenu>
                                    <StackPanel Background="Transparent">
                                        <TextBlock><Run Text="Controls (Frame Viewer):"/></TextBlock>
                                        <TextBlock><Run Text="Arrows (Ctrl) - Frame Width/Height"/></TextBlock>
                                        <TextBlock Visibility="Collapsed"><Run Text="Arrows (Alt) - Pivot X/Y"/></TextBlock>
                                        <TextBlock><Run Text="Arrows (Shift) - Frame Top/Left"/></TextBlock>
                                        <Separator/>
                                        <TextBlock><Run Text="Mouse (Ctrl) - Frame Width/Height"/></TextBlock>
                                        <TextBlock><Run Text="Mouse (Alt) - Pivot X/Y"/></TextBlock>
                                        <TextBlock><Run Text="Mouse (Shift) - Frame Top/Left"/></TextBlock>
                                    </StackPanel>
                                </ContextMenu>
                            </Button.ContextMenu>
                            <Button.ToolTip>
                                <Label Content="Help"/>
                            </Button.ToolTip>
                        </Button>
                        <Button Width="20" Height="20" Grid.Column="1" Visibility="Hidden"/>
                        <Button Width="20" Height="20" Grid.Column="1" Visibility="Hidden"/>
                    </StackPanel>
                    <ScrollBar Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal" Width="40" Height="20" x:Name="AnimationScroller" ValueChanged="AnimationScroller_ValueChanged" SmallChange="1" Value="2" Maximum="3" Minimum="0"/>

                </Grid>


                <Border KeyboardNavigation.DirectionalNavigation="Contained" 
    KeyboardNavigation.TabNavigation="Contained">
                    <Grid x:Name="CanvasBackground" Background="#303030">
                        <Grid Visibility="Visible" x:Name="BorderMarkerBackground" Opacity="0.5" Background="Transparent" MouseDown="CanvasView_MouseDown" MouseUp="CanvasView_MouseUp" MouseMove="CanvasView_MouseMove">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid Background="Black" Opacity="0.1" Grid.Row="0" Grid.Column="0" x:Name="ImageSection1"/>
                            <Grid Background="Black" Opacity="0.1" Grid.Row="0" Grid.Column="1" x:Name="ImageSection2"/>
                            <Grid Background="Black" Opacity="0.1" Grid.Row="1" Grid.Column="0" x:Name="ImageSection3"/>
                            <Grid Background="Black" Opacity="0.1" Grid.Row="1" Grid.Column="1" x:Name="ImageSection4"/>
                        </Grid>
                        <render:SKElement PaintSurface="CanvasView_PaintSurface" PreviewKeyDown="CanvasView_PreviewKeyDown" MouseMove="CanvasView_MouseMove" KeyUp="CanvasView_KeyUp" KeyDown="CanvasView_KeyDown" Focusable="True" MouseDown="CanvasView_MouseDown" MouseUp="CanvasView_MouseUp" x:Name="CanvasView" Margin="0 0 0 0" SizeChanged="Canvas_SizeChanged"
                        RenderOptions.BitmapScalingMode="NearestNeighbor"
                        ClipToBounds="True" MouseWheel="Canvas_MouseWheel"></render:SKElement>
                    </Grid>
                </Border>
            </DockPanel>

            <DockPanel KeyboardNavigation.DirectionalNavigation="None" Grid.Column="4"
                          IsEnabled="{Binding IsAnimationSelected}">
                <StackPanel x:Name="ControlPanel" Background='{DynamicResource NormalBackground2}'>
                    <Grid Margin="0 0 0 5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="20"/>
                            <RowDefinition Height="5"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Foreground="{DynamicResource NormalText}" Grid.Column="0" Grid.Row="0" Text="Speed"/>
                        <xc:IntegerUpDown x:Name="SpeedNUD" Grid.Column="0" Grid.Row="1" Minimum="0" Maximum="65535"
                                          Value="{Binding Speed, Mode=TwoWay}"/>
                        <TextBlock Foreground="{DynamicResource NormalText}" Grid.Column="2" Grid.Row="0" Text="Loop index"/>
                        <xc:IntegerUpDown x:Name="LoopIndexNUD" Grid.Column="2" Grid.Row="1" Minimum="0" Maximum="255"
                                          Value="{Binding Loop, Mode=TwoWay}"/>

                        <TextBlock Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="3" Text="Rotation Flags" Foreground="{DynamicResource NormalText}"/>
                        <ComboBox x:Name="FlagsSelector" Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="5"
                                  SelectedIndex="{Binding Flags, Mode=TwoWay}">
                            <TextBlock Text="No Rotation"/>
                            <TextBlock Text="Full engine rotation"/>
                            <TextBlock Text="45 Degree engine rotation"/>
                            <TextBlock Text="Static rotation using extra frames"/>
                            <TextBlock Text="1/2 Engine Rotation"/>
                            <TextBlock Text="90 Degree Engine Rotation"/>
                            <TextBlock Text="135/225 degree Rotation"/>
                            <TextBlock Text="Just 135 degree Rotation"/>
                        </ComboBox>

                    </Grid>
                    <GroupBox IsEnabled="{Binding IsNotRunning}">
                        <GroupBox.Header>
                            <StackPanel Background="Transparent">
                                <TextBlock Foreground="{DynamicResource NormalText}"><Run Text="Current animation "/><Run Text=" "/><Run Text="{Binding SelectedAnimationIndex, Mode=OneWay}"/><Run Text=" "/><Run Text="- Total "/><Run Text=" "/><Run x:Name="AnimationsCountLabel" Text="{Binding AnimationsCount, Mode=OneWay}"/></TextBlock>
                                <TextBlock Foreground="{DynamicResource NormalText}"><Run Text="Current frame "/><Run Text=" "/><Run Text="{Binding SelectedFrameIndex, Mode=OneWay}"/><Run Text=" "/><Run Text="- Total "/><Run Text=" "/><Run x:Name="FramesCountLabel" Text="{Binding FramesCount, Mode=OneWay}"/><Run Text=" "/><Run Text="- All "/><Run Text=" "/><Run x:Name="AllFramesCountLabel"/></TextBlock>
                            </StackPanel>
                        </GroupBox.Header>
                        <StackPanel Background='{DynamicResource NormalBackground2}'>
                            <TextBlock Margin="0 5 0 0" Text="Texture" Foreground="{DynamicResource NormalText}"/>
                            <Grid Height="22">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox x:Name="SpriteSheetList" SelectionChanged="SpriteSheetList_SelectionChanged" ItemsSource="{Binding SpriteSheetPaths}" SelectedIndex="{Binding CurrentSpriteSheet, Mode=TwoWay}"/>
                                <Button x:Name="TextureButton"  Click="MenuViewTexture_Click" Grid.Column="1" Content="..." VerticalContentAlignment="Top"/>
                                <Popup x:Name="TextureManagerPopup" StaysOpen="False" Width="{Binding ActualWidth, ElementName=PopupHost}" Height="{Binding ActualHeight, ElementName=PopupHost}" VerticalOffset="{Binding ActualHeight, ElementName=PopupHost}" PlacementTarget="{Binding ElementName=PopupHost}" Placement="Top" IsOpen="False" LostFocus="TextureManagerPopup_LostFocus">
                                    <StackPanel>
                                        <local:TextureManager Width="{Binding ActualWidth, ElementName=PopupHost}" Height="{Binding ActualHeight, ElementName=PopupHost}" x:Name="TextureManagerMenu" Margin="0" Padding="0"/>
                                    </StackPanel>
                                </Popup>
                            </Grid>

                            <TextBlock Margin="0 5 0 0" Text="Hitbox" Foreground="{DynamicResource NormalText}"/>
                            <Grid Height="22">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox SelectionChanged="HitBoxComboBox_SelectionChanged" MouseDoubleClick="HitBoxComboBox_MouseDoubleClick" x:Name="HitBoxComboBox" ItemsSource="{Binding CollisionBoxesNames}" Visibility="{Binding HitboxV3Visibility}" SelectedIndex="{Binding SelectedFrameHitboxIndex, Mode=TwoWay}"/>
                                <Button x:Name="HitboxButton"  Click="MenuViewHitbox_Click" Grid.Column="1" Content="..." VerticalContentAlignment="Top"/>
                                <Popup x:Name="HitboxManagerPopup" PlacementTarget="{Binding ElementName=HitboxButton}" Placement="Left" HorizontalOffset="{Binding ActualWidth, ElementName=HitboxButton}" VerticalOffset="{Binding ActualHeight, ElementName=HitboxButton}" StaysOpen="False" IsOpen="False" LostFocus="HitboxManagerPopup_LostFocus">
                                    <StackPanel>
                                        <local:HitboxManager x:Name="HitboxManagerMenu" Margin="0" Padding="0"/>
                                    </StackPanel>
                                </Popup>
                            </Grid>
                            <Grid Height="22" Margin="0,5,0,-5">
                                <StackPanel Background="Transparent" Orientation="Horizontal">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="24"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock x:Name="HBLabel" MouseDown="TextBlock_MouseDown" Text="Hitbox Color:" VerticalAlignment="Center"/>
                                        <xc:ColorPicker Grid.Column="1" SelectedColor="#FFE700FF" ShowStandardColors="False" ShowTabHeaders="False" Visibility="Hidden" x:Name="HitboxColorPicker" Foreground="#7FFF0000" Style="{DynamicResource ColorPicker1}"/>
                                        <Border Grid.Column="1" Margin="2,0" Width="20" Height="20" BorderBrush="Black" BorderThickness="1">
                                            <Grid x:Name="HitboxColorBox" HorizontalAlignment="Left" Grid.Column="1" Width="18" Height="18" Background="#FFE700FF">
                                                <Button x:Name="HitboxColorTrigger" Width="18" Height="18" Opacity="0.0" Click="HitboxColorBox_Click"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                    <Grid Margin="0,0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="13*"/>
                                            <RowDefinition Height="9*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="24"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock x:Name="AxisLabel" MouseDown="TextBlock_MouseDown" Text="Axis Color:" VerticalAlignment="Center" Margin="0,3" Grid.RowSpan="2"/>
                                        <xc:ColorPicker Grid.Column="1" SelectedColor="#FFFF0000" ShowStandardColors="False" ShowTabHeaders="False" Visibility="Hidden" x:Name="AxisColorPicker" Foreground="#7FFF0000" Style="{DynamicResource ColorPicker1}" Grid.RowSpan="2"/>
                                        <Border Grid.Column="1" Margin="2,1" Width="20" Height="20" BorderBrush="Black" BorderThickness="1" Grid.RowSpan="2">
                                            <Grid x:Name="AxisColorBox" HorizontalAlignment="Left" Grid.Column="1" Width="18" Height="18" Background="#FFFF0000">
                                                <Button x:Name="AxisColorTrigger" Width="18" Height="18" Opacity="0.0" Click="AxisColorTrigger_Click"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                    <Grid Margin="0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="24"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock x:Name="BGLabel" MouseDown="TextBlock_MouseDown" Text="BG:" VerticalAlignment="Center"/>
                                        <xc:ColorPicker Grid.Column="1" SelectedColor="#303030" ShowStandardColors="False" ShowTabHeaders="False" Visibility="Hidden" x:Name="BGColorPicker" Foreground="#7FFF0000" Style="{DynamicResource ColorPicker1}"/>
                                        <Border Grid.Column="1" Margin="2,0" Width="20" Height="20" BorderBrush="Black" BorderThickness="1">
                                            <Grid x:Name="BGColorBox" HorizontalAlignment="Left" Grid.Column="1" Width="18" Height="18" Background="#303030">
                                                <Button x:Name="BGColorTrigger" Width="18" Height="18" Opacity="0.0" Click="BGColorTrigger_Click"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </StackPanel>
                            </Grid>

                            <ComboBox x:Name="HitBoxComboBox2" Margin="0,1" Visibility="Hidden"/>
                            <Grid Margin="3,-9,3,3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Column="0" Grid.Row="1" Text="Left" Foreground="{DynamicResource NormalText}"/>
                                <xc:IntegerUpDown ValueChanged="NUD_ValueChanged" x:Name="HitboxLeftNUD" Grid.Column="1" Grid.Row="1"
                                    Minimum="-32768" Maximum="32767"
                                    Value="{Binding SelectedHitbox_X, Mode=TwoWay}"/>
                                <TextBlock Grid.Column="3" Grid.Row="1" Text="Right" Foreground="{DynamicResource NormalText}"/>
                                <xc:IntegerUpDown ValueChanged="NUD_ValueChanged" x:Name="HitboxRightNUD" Grid.Column="4" Grid.Row="1"
                                    Minimum="-32768" Maximum="32767"
                                    Value="{Binding SelectedHitbox_Y, Mode=TwoWay}"/>
                                <TextBlock Grid.Column="0" Grid.Row="3" Text="Top" Foreground="{DynamicResource NormalText}"/>
                                <xc:IntegerUpDown ValueChanged="NUD_ValueChanged" x:Name="HitboxTopNUD" Grid.Column="1" Grid.Row="3"
                                    Minimum="-32768" Maximum="32767"
                                    Value="{Binding SelectedHitbox_Width, Mode=TwoWay}"/>
                                <TextBlock Grid.Column="3" Grid.Row="3" Text="Bottom" Foreground="{DynamicResource NormalText}"/>
                                <xc:IntegerUpDown ValueChanged="NUD_ValueChanged" x:Name="HitboxBottomNUD" Grid.Column="4" Grid.Row="3"
                                    Minimum="-32768" Maximum="32767"
                                    Value="{Binding SelectedHitbox_Height, Mode=TwoWay}"/>
                            </Grid>

                            <TextBlock Margin="0 5 0 0" Foreground="{DynamicResource NormalText}"><Run Text="Sprite property"/><InlineUIContainer/></TextBlock>
                            <Grid Margin="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="35"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2"/>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Column="0" Grid.Row="1" Text="X" Foreground="{DynamicResource NormalText}"/>
                                <xc:IntegerUpDown ValueChanged="NUD_ValueChanged" x:Name="FrameLeftNUD" Grid.Column="1" Grid.Row="1"
                                    Minimum="0" Maximum="32767"
                                    Value="{Binding SelectedFrameLeft, Mode=TwoWay}"/>
                                <TextBlock Grid.Column="3" Grid.Row="1" Text="Y" Foreground="{DynamicResource NormalText}"/>
                                <xc:IntegerUpDown ValueChanged="NUD_ValueChanged" x:Name="FrameTopNUD" Grid.Column="4" Grid.Row="1"
                                    Minimum="0" Maximum="32767"
                                    Value="{Binding SelectedFrameTop, Mode=TwoWay}"/>
                                <TextBlock Grid.Column="0" Grid.Row="3" Text="Width" Foreground="{DynamicResource NormalText}"/>
                                <xc:IntegerUpDown ValueChanged="NUD_ValueChanged" x:Name="FrameWidthNUD" Grid.Column="1" Grid.Row="3"
                                    Minimum="0" Maximum="32767"
                                    Value="{Binding SelectedFrameWidth, Mode=TwoWay}"/>
                                <TextBlock Grid.Column="3" Grid.Row="3" Text="Height" Foreground="{DynamicResource NormalText}"/>
                                <xc:IntegerUpDown ValueChanged="NUD_ValueChanged" x:Name="FrameHeightNUD"  Grid.Column="4" Grid.Row="3"
                                    Minimum="0" Maximum="32767"
                                    Value="{Binding SelectedFrameHeight, Mode=TwoWay}"/>
                                <TextBlock Grid.Column="0" Grid.Row="5" Text="PivotX" Foreground="{DynamicResource NormalText}"/>
                                <xc:IntegerUpDown ValueChanged="NUD_ValueChanged" x:Name="PivotX_NUD" Grid.Column="1" Grid.Row="5"
                                    Minimum="-32768" Maximum="32767"
                                    Value="{Binding SelectedFramePivotX, Mode=TwoWay}"/>
                                <TextBlock Grid.Column="3" Grid.Row="5" Text="PivotY" Foreground="{DynamicResource NormalText}"/>
                                <xc:IntegerUpDown ValueChanged="NUD_ValueChanged" x:Name="PivotY_NUD" Grid.Column="4" Grid.Row="5"
                                    Minimum="-32768" Maximum="32767"
                                    Value="{Binding SelectedFramePivotY, Mode=TwoWay}"/>
                                <TextBlock x:Name="IDLabel" Grid.Column="0" Grid.Row="7" Text="ID" Foreground="{DynamicResource NormalText}"/>
                                <xc:IntegerUpDown ValueChanged="NUD_ValueChanged" x:Name="IdentificationNUD" Grid.Column="1" Grid.Row="7"
                                    Minimum="0" Maximum="65535"
                                    Value="{Binding SelectedFrameId, Mode=TwoWay}"/>
                                <TextBlock Grid.Column="3" Grid.Row="7" Text="Duration" Foreground="{DynamicResource NormalText}"/>
                                <xc:IntegerUpDown ValueChanged="NUD_ValueChanged" x:Name="DelayNUD" Grid.Column="4" Grid.Row="7"
                                    Minimum="0" Maximum="65535"
                                    Value="{Binding SelectedFrameDuration, Mode=TwoWay}"/>

                            </Grid>
                        </StackPanel>
                    </GroupBox>

                </StackPanel>
            </DockPanel>

            <StatusBar Grid.Row="1" Grid.ColumnSpan="5" Background="{DynamicResource StatusBarBackground}">
                <StatusBarItem>
                    <StackPanel Background="{DynamicResource StatusBarBackground}">
                        <TextBlock x:Name="SpriteDirectoryLabel" Text="Sprite Directory: N/A"/>
                        <TextBlock x:Name="AnimationPathLabel" Text="Animation Path: N/A"/>
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </DockPanel>
</Window>
